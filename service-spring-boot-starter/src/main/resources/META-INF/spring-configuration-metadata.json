{
  "hints": [],
  "groups": [
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.config",
      "type": "org.mybatis.spring.boot.autoconfigure.MybatisProperties"
    }
  ],
  "properties": [
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "defaultValue": 1,
      "name": "redis.config.minRandomTimeout",
      "description": "最小随机时间",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "defaultValue": 10,
      "name": "redis.config.maxRandomTimeout",
      "description": "最大随机时间",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.config.maxIdle",
      "description": "最大空闲数",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.config.maxTotal",
      "description": "连接池的最大数据库连接数",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "defaultValue": 10,
      "name": "redis.config.maxWaitMillis",
      "description": "最大建立连接等待时间",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "defaultValue": 1800000,
      "name": "redis.timeout.minEvictableIdleTimeMillis",
      "description": "逐出连接的最小空闲时间，默认1800000毫秒(30分钟)",
      "type": "java.lang.Integer"
    },{
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.timeout.numTestsPerEvictionRun",
      "description": " 每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3",
      "type": "java.lang.Integer"
    },{
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.timeout.timeBetweenEvictionRunsMillis",
      "description": "逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.timeout.testOnBorrow",
      "description": "是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.warm.heart.redis.config.RedisConfigProperties",
      "name": "redis.timeout.testWhileIdle",
      "description": "在空闲时检查有效性, 默认false",
      "type": "java.lang.Boolean"
    }

  ]
}